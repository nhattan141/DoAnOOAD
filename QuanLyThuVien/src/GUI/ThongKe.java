/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BUS.ThongKeBUS;
import DTO.CTPhieuNhapDTO;
import DTO.ChiTietPhieuMuonDTO;
import DTO.ChiTietPhieuPhatDTO;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.LayoutManager;
import java.awt.RenderingHints;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lộc
 */
public class ThongKe extends javax.swing.JFrame {
    private int position=0;
    private int mode = 0;
    private DefaultTableModel modelPN = new DefaultTableModel();
    private DefaultTableModel modelPM = new DefaultTableModel();
    private DefaultTableModel modelPP = new DefaultTableModel();
    private ArrayList<CTPhieuNhapDTO> listPN=new ArrayList<>();
    private ArrayList<Object> listPM=new ArrayList<>();
    private ArrayList<Vector> listPP=new ArrayList<>();
    /**
     * Creates new form quanLySach
     */
    public ThongKe() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new RoundedPanel(10, new Color(68, 187, 236));
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new RoundedPanel(50, new Color(20, 20, 50));
        btThongKe = new javax.swing.JButton();
        btDong = new javax.swing.JButton();
        txTu = new javax.swing.JTextField();
        txDen = new javax.swing.JTextField();
        btTaoMoi = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txNam = new javax.swing.JTextField();
        raThang = new javax.swing.JRadioButton();
        raQuy = new javax.swing.JRadioButton();
        raNam = new javax.swing.JRadioButton();
        cbQuy = new javax.swing.JComboBox<>();
        cbThang = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbPhieuMuon = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbPhieuNhap = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbPhieuPhat = new javax.swing.JTable();
        lbSachDM = new javax.swing.JLabel();
        lbSachCT = new javax.swing.JLabel();
        lbSachDT = new javax.swing.JLabel();
        lbSoLP = new javax.swing.JLabel();
        lbTienPhat = new javax.swing.JLabel();
        lbSoSN = new javax.swing.JLabel();
        lbTienChi = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("THỐNG KÊ");
        setLocation(new java.awt.Point(200, 0));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(30, 29, 65));

        jPanel2.setBackground(new java.awt.Color(30, 29, 65));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("THỐNG KÊ THƯ VIỆN");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1028, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(30, 29, 65));

        btThongKe.setBackground(new java.awt.Color(165, 201, 63));
        btThongKe.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btThongKe.setForeground(new java.awt.Color(255, 255, 255));
        btThongKe.setText("Thống kê");
        btThongKe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btThongKeActionPerformed(evt);
            }
        });

        btDong.setBackground(new java.awt.Color(206, 81, 80));
        btDong.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btDong.setForeground(new java.awt.Color(255, 255, 255));
        btDong.setText("Đóng");
        btDong.setToolTipText("");
        btDong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDongActionPerformed(evt);
            }
        });

        txTu.setBackground(new java.awt.Color(27, 26, 67));
        txTu.setForeground(new java.awt.Color(255, 255, 255));
        txTu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txTuMouseClicked(evt);
            }
        });

        txDen.setBackground(new java.awt.Color(27, 26, 67));
        txDen.setForeground(new java.awt.Color(255, 255, 255));
        txDen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txDenMouseClicked(evt);
            }
        });

        btTaoMoi.setBackground(new java.awt.Color(255, 153, 51));
        btTaoMoi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btTaoMoi.setForeground(new java.awt.Color(255, 255, 255));
        btTaoMoi.setText("Tạo mới");
        btTaoMoi.setToolTipText("");
        btTaoMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTaoMoiActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Từ ngày:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Đến ngày:");

        txNam.setBackground(new java.awt.Color(27, 26, 67));
        txNam.setForeground(new java.awt.Color(255, 255, 255));

        raThang.setBackground(new java.awt.Color(20, 20, 50));
        raThang.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        raThang.setForeground(new java.awt.Color(255, 255, 255));
        raThang.setText("Tháng:");
        raThang.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        raThang.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        raThang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                raThangMouseClicked(evt);
            }
        });

        raQuy.setBackground(new java.awt.Color(20, 20, 50));
        raQuy.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        raQuy.setForeground(new java.awt.Color(255, 255, 255));
        raQuy.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        raQuy.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        raQuy.setLabel("Quý:");
        raQuy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                raQuyMouseClicked(evt);
            }
        });

        raNam.setBackground(new java.awt.Color(20, 20, 50));
        raNam.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        raNam.setForeground(new java.awt.Color(255, 255, 255));
        raNam.setHideActionText(true);
        raNam.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        raNam.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        raNam.setLabel("Năm:");
        raNam.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                raNamMouseClicked(evt);
            }
        });

        cbQuy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn quý", "1", "2", "3", "4" }));

        cbThang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn tháng", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btTaoMoi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btThongKe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btDong)
                        .addGap(10, 10, 10))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(raNam, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                            .addComponent(raThang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(raQuy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txNam)
                            .addComponent(txDen, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txTu, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbQuy, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbThang, 0, 180, Short.MAX_VALUE))))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txTu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txDen, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(raThang, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(cbThang))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbQuy, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(raQuy, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txNam, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(raNam, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btTaoMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btDong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59))
        );

        tbPhieuMuon.setBackground(new java.awt.Color(20, 20, 50));
        tbPhieuMuon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tbPhieuMuon.setForeground(new java.awt.Color(255, 255, 255));
        tbPhieuMuon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Mã sách", "Số lượng"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbPhieuMuon.setGridColor(new java.awt.Color(255, 255, 255));
        tbPhieuMuon.setRowHeight(25);
        tbPhieuMuon.setShowGrid(true);
        tbPhieuMuon.getTableHeader().setResizingAllowed(false);
        tbPhieuMuon.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tbPhieuMuon);

        tbPhieuNhap.setBackground(new java.awt.Color(20, 20, 50));
        tbPhieuNhap.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tbPhieuNhap.setForeground(new java.awt.Color(255, 255, 255));
        tbPhieuNhap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã sách", "Số lượng", "Đơn giá", "Thành tiền "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbPhieuNhap.setGridColor(new java.awt.Color(255, 255, 255));
        tbPhieuNhap.setRowHeight(25);
        tbPhieuNhap.setShowGrid(true);
        tbPhieuNhap.getTableHeader().setResizingAllowed(false);
        tbPhieuNhap.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tbPhieuNhap);

        tbPhieuPhat.setBackground(new java.awt.Color(20, 20, 50));
        tbPhieuPhat.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tbPhieuPhat.setForeground(new java.awt.Color(255, 255, 255));
        tbPhieuPhat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã lỗi phạt", "Số lượng", "Tiền phạt", "Thành tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbPhieuPhat.setGridColor(new java.awt.Color(255, 255, 255));
        tbPhieuPhat.setRowHeight(25);
        tbPhieuPhat.setShowGrid(true);
        tbPhieuPhat.getTableHeader().setResizingAllowed(false);
        tbPhieuPhat.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tbPhieuPhat);

        lbSachDM.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbSachDM.setForeground(new java.awt.Color(255, 255, 255));
        lbSachDM.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbSachDM.setText("Số sách đã mượn:");

        lbSachCT.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbSachCT.setForeground(new java.awt.Color(255, 255, 255));
        lbSachCT.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbSachCT.setText("Số sách chưa trả:");

        lbSachDT.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbSachDT.setForeground(new java.awt.Color(255, 255, 255));
        lbSachDT.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbSachDT.setText("Số sách đã trả:");

        lbSoLP.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbSoLP.setForeground(new java.awt.Color(255, 255, 255));
        lbSoLP.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbSoLP.setText("Tổng số lỗi phạt:");

        lbTienPhat.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbTienPhat.setForeground(new java.awt.Color(255, 255, 255));
        lbTienPhat.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbTienPhat.setText("Tổng tiền phạt:");

        lbSoSN.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbSoSN.setForeground(new java.awt.Color(255, 255, 255));
        lbSoSN.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbSoSN.setText("Tổng số sách nhập:");
        lbSoSN.setToolTipText("");

        lbTienChi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbTienChi.setForeground(new java.awt.Color(255, 255, 255));
        lbTienChi.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbTienChi.setText("Tổng tiền chi:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbSachDT)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane1))
                                    .addComponent(lbSachDM))
                                .addGap(80, 80, 80)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbSoLP)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbTienPhat)
                                    .addComponent(lbSoSN)
                                    .addComponent(lbTienChi))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbSachCT)
                        .addGap(942, 942, 942))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbSoSN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTienChi)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbSachDM)
                    .addComponent(lbSoLP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbSachCT)
                    .addComponent(lbTienPhat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbSachDT)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btTaoMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTaoMoiActionPerformed
        // TODO add your handling code here:
        mode = 0;
        position = 0;
        txTu.setText("");
        txTu.setEnabled(true);
        txDen.setText("");
        txDen.setEnabled(true);
        cbThang.setSelectedIndex(0);
        cbQuy.setSelectedIndex(0);
        txNam.setText("");
        raThang.setSelected(false);
        raThang.setEnabled(true);
        raQuy.setSelected(false);
        raQuy.setEnabled(true);
        raNam.setSelected(false);
        raNam.setEnabled(true);
        cbThang.setEnabled(true);
        cbQuy.setEnabled(true);
        txNam.setEnabled(true);
        Vector header=new Vector();
        header.add("Mã sách");
        header.add("Số lượng");
        header.add("Đơn giá");
        header.add("Thành tiền");
        modelPN = new DefaultTableModel(header, 0);
        header=new Vector();
        header.add("Mã sách");
        header.add("Số lượng");
        modelPM = new DefaultTableModel(header, 0);
        header=new Vector();
        header.add("Mã lỗi phạt");
        header.add("Số lượng");
        header.add("Tiền phạt");
        header.add("Thành tiền");
        modelPP = new DefaultTableModel(header, 0);
        tbPhieuNhap.setModel(modelPN);
        tbPhieuMuon.setModel(modelPM);
        tbPhieuPhat.setModel(modelPP);
        lbSoSN.setText("Tổng số sách nhập:");
        lbTienChi.setText("Tổng tiền chi:");
        lbSachDM.setText("Số sách đã mượn:");
        lbSachCT.setText("Số sách chưa trả:");
        lbSachDT.setText("Số sách đã trả:");
        lbSoLP.setText("Tổng số lỗi phạt:");
        lbTienPhat.setText("Tổng tiền phạt:");
    }//GEN-LAST:event_btTaoMoiActionPerformed

    private void btDongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDongActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btDongActionPerformed

    private void btThongKeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btThongKeActionPerformed
        // TODO add your handling code here:
        if(!Validate())
            return;
        switch(position){
            case 1:{
                String tu, den;
                tu=txTu.getText();
                den=txDen.getText();
                if(!tu.equals("")){
                    if(ValidateDate(tu)==1){
                        JOptionPane.showMessageDialog(null, "Ngày phải ở định dạng dd-mm-yyyy");
                        return;
                    }
                    else if(ValidateDate(tu)==2) {
                        JOptionPane.showMessageDialog(null, "Ngày không hợp lệ");
                        return;
                    }
                }
                if(!den.equals("")){
                    if(ValidateDate(den)==1){
                        JOptionPane.showMessageDialog(null, "Ngày phải ở định dạng dd-mm-yyyy");
                        return;
                    }
                    else if(ValidateDate(den)==2) {
                        JOptionPane.showMessageDialog(null, "Ngày không hợp lệ");
                        return;
                    }
                }
                try {
                    ThongKeBUS thongkebus=new ThongKeBUS();
                    listPN=thongkebus.listNH(tu, den);
                    listPM=thongkebus.listPM(tu, den);
                    listPP=thongkebus.listPP(tu, den);
                } catch (Exception ex) {
                Logger.getLogger(ThongKe.class.getName()).log(Level.SEVERE, null, ex);
                }   
                outModel();
                break;
            }
            case 2:{
                int thang, nam;
                thang=Integer.parseInt(cbThang.getSelectedItem().toString());
                nam=Integer.parseInt(txNam.getText());
                try {
                    ThongKeBUS thongkebus=new ThongKeBUS();
                    listPN=thongkebus.listNHThang(thang, nam);
                    listPM=thongkebus.listPMThang(thang, nam);
                    listPP=thongkebus.listPPThang(thang, nam);
                } catch (Exception ex) {
                    Logger.getLogger(ThongKe.class.getName()).log(Level.SEVERE, null, ex);
                }
                outModel();
                break;
            }
            case 3:{
                int quy, nam;
                quy=Integer.parseInt(cbQuy.getSelectedItem().toString());
                nam=Integer.parseInt(txNam.getText());
                try {
                ThongKeBUS thongkebus=new ThongKeBUS();
                listPN=thongkebus.listNHQuy(quy, nam);
                listPM=thongkebus.listPMQuy(quy, nam);
                listPP=thongkebus.listPPQuy(quy, nam);
                } catch (Exception ex) {
                    Logger.getLogger(ThongKe.class.getName()).log(Level.SEVERE, null, ex);
                }
                outModel();
                break;
            }
            case 4:{
                int nam;
                nam=Integer.parseInt(txNam.getText());
                try {
                ThongKeBUS thongkebus=new ThongKeBUS();
                listPN=thongkebus.listNH(nam);
                listPM=thongkebus.listPM(nam);
                listPP=thongkebus.listPP(nam);
                } catch (Exception ex) {
                    Logger.getLogger(ThongKe.class.getName()).log(Level.SEVERE, null, ex);
                }
                outModel();
                break;
            }
        }

    }//GEN-LAST:event_btThongKeActionPerformed

    private void raQuyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_raQuyMouseClicked
        // TODO add your handling code here:
        position=3;
        if (mode == 0) {
            raQuy.setEnabled(false);
            txTu.setText("");
            txTu.setEnabled(false);
            txDen.setText("");
            txDen.setEnabled(false);
            raThang.setSelected(false);
            raThang.setEnabled(false);
            cbThang.setSelectedIndex(0);
            cbThang.setEnabled(false);
            raNam.setSelected(true);
            raNam.setEnabled(false);
            mode = 1;
        }
    }//GEN-LAST:event_raQuyMouseClicked

    private void raThangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_raThangMouseClicked
        // TODO add your handling code here:
        position=2;
        if (mode == 0) {
            raThang.setEnabled(false);
            txTu.setText("");
            txTu.setEnabled(false);
            txDen.setText("");
            txDen.setEnabled(false);
            raQuy.setSelected(false);
            raQuy.setEnabled(false);
            cbQuy.setSelectedIndex(0);
            cbQuy.setEnabled(false);
            raNam.setSelected(true);
            raNam.setEnabled(false);
            mode = 1;
        }
    }//GEN-LAST:event_raThangMouseClicked

    private void txTuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txTuMouseClicked
        // TODO add your handling code here:
        position=1;
        if (mode == 0) {
            raThang.setSelected(false);
            raThang.setEnabled(false);
            cbThang.setSelectedIndex(0);
            cbThang.setEnabled(false);
            raQuy.setSelected(false);
            raQuy.setEnabled(false);
            cbQuy.setSelectedIndex(0);
            cbQuy.setEnabled(false);
            raNam.setSelected(false);
            raNam.setEnabled(false);
            txNam.setText("");
            txNam.setEnabled(false);
            mode = 1;
        }
    }//GEN-LAST:event_txTuMouseClicked

    private void txDenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txDenMouseClicked
        // TODO add your handling code here:
        position=1;
        if (mode == 0) {
            raThang.setSelected(false);
            raThang.setEnabled(false);
            cbThang.setSelectedIndex(0);
            cbThang.setEnabled(false);
            raQuy.setSelected(false);
            raQuy.setEnabled(false);
            cbQuy.setSelectedIndex(0);
            cbQuy.setEnabled(false);
            raNam.setSelected(false);
            raNam.setEnabled(false);
            txNam.setText("");
            txNam.setEnabled(false);
            mode = 1;
        }
    }//GEN-LAST:event_txDenMouseClicked

    private void raNamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_raNamMouseClicked
        // TODO add your handling code here:
        position=4;
        if (mode == 0) {
            raNam.setEnabled(false);
            txTu.setText("");
            txTu.setEnabled(false);
            txDen.setText("");
            txDen.setEnabled(false);
            raThang.setSelected(false);
            raThang.setEnabled(false);
            cbThang.setSelectedIndex(0);
            cbThang.setEnabled(false);
            raQuy.setSelected(false);
            raQuy.setEnabled(false);
            cbQuy.setSelectedIndex(0);
            cbQuy.setEnabled(false);
            mode = 1;
        }
    }//GEN-LAST:event_raNamMouseClicked

    private boolean isLeapYear(int year) {
        if (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0)) {
            return true;
        }
        return false;
    }

    private int ValidateDate(String dateInput) {
        if (!dateInput.matches("^\\d{2}-\\d{2}-\\d{4}$")) {
            return 1;
        }

        String[] date;
        date = dateInput.split("-");
        int day, month, year;
        day = Integer.parseInt(date[0]);
        month = Integer.parseInt(date[1]);
        year = Integer.parseInt(date[2]);

        if (month < 1 || month > 12) {
            return 2;
        }

        if (month == 2) {
            if (isLeapYear(year)) {
                if (day < 1 || day > 29) {
                    return 2;
                }
            } else {
                if (day < 1 || day > 28) {
                    return 2;
                }
            }
        }
        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {
            if (day < 1 || day > 31) {
                return 2;
            }
        }
        if (month == 4 || month == 6 || month == 9 || month == 11) {
            if (day < 1 || day > 30) {
                return 2;
            }
        }
        return 0;
    }
    
    private boolean Validate(){
        String tu, den, thang, quy, nam;
        
        tu=txTu.getText();
        den=txDen.getText();
        thang=cbThang.getSelectedItem().toString();
        quy=cbQuy.getSelectedItem().toString();
        nam=txNam.getText();
        
        if(position==0){
            JOptionPane.showMessageDialog(null, "Vui lòng chọn kiểu thống kê");
            return false;
        }
        
        if(txTu.isEnabled()==true){
            if(tu.equals("") && den.equals("")){
                JOptionPane.showMessageDialog(null, "Vui lòng nhập đủ thông tin");
                return false;
            }
        }
        
        if(raThang.isSelected()==true){
            if(thang.equals("Chọn tháng") || nam.equals("")){
                JOptionPane.showMessageDialog(null, "Vui lòng nhập đủ thông tin");
                return false;
            }
        }
        
        if(raQuy.isSelected()==true){
            if(quy.equals("Chọn quý") || nam.equals("")){
                JOptionPane.showMessageDialog(null, "Vui lòng nhập đủ thông tin");
                return false;
            }
        }
        
        if(txNam.isEnabled()==true){
            if(nam.equals("")){
                JOptionPane.showMessageDialog(null, "Vui lòng nhập đủ thông tin");
                return false;
            }
        }
        
        return true;
    }
    
    private void outModel(){
        int tongSachNhap=0, tongTienChi=0, sachDaMuon=0, sachDaTra=0, sachChuaTra=0;
        Integer tongLoiPhat=0, tongTienPhat=0;
        Vector header=new Vector();
        header.add("Mã sách");
        header.add("Số lượng");
        header.add("Đơn giá");
        header.add("Thành tiền");
        modelPN = new DefaultTableModel(header, 0);
        for(CTPhieuNhapDTO ct: listPN) {
            Vector row=new Vector();
            row.add(ct.getSach());
            row.add(ct.getSoluong());
            tongSachNhap+=ct.getSoluong();
            row.add(ct.getDongia());
            row.add(ct.getThanhtien());
            tongTienChi+=ct.getThanhtien();
            modelPN.addRow(row);
        }
        tbPhieuNhap.setModel(modelPN);
        lbSoSN.setText("Tổng số sách nhập: " + tongSachNhap);
        lbTienChi.setText("Tổng tiền chi: " + tongTienChi + " VNĐ");
        
        header=new Vector();
        header.add("Mã sách");
        header.add("Số lượng");
        modelPM = new DefaultTableModel(header, 0);
        for(int i=0;i<listPM.size()-1;i++) {
            Vector row=new Vector();
            ChiTietPhieuMuonDTO ct=new ChiTietPhieuMuonDTO();
            ct=(ChiTietPhieuMuonDTO) listPM.get(i);
            row.add(ct.getMaPhieuMuon());
            row.add(ct.getSoLuong());
            sachDaMuon+=ct.getSoLuong();
            modelPM.addRow(row);
        }
        sachDaTra=(int) listPM.get(listPM.size()-1);
        sachChuaTra=sachDaMuon-sachDaTra;
        tbPhieuMuon.setModel(modelPM);
        lbSachDM.setText("Số sách đã mượn: " + sachDaMuon);
        lbSachDT.setText("Số sách đã trả: " + sachDaTra);
        lbSachCT.setText("Số sách chưa trả: " + sachChuaTra);
        
        header=new Vector();
        header.add("Mã lỗi phạt");
        header.add("Số lượng");
        header.add("Tiền phạt");
        header.add("Thành tiền");
        modelPP = new DefaultTableModel(header, 0);
        for(Vector r: listPP) {
            Vector row=new Vector();
            row.add(r.get(0));
            row.add(r.get(1));
            tongLoiPhat+=Integer.parseInt(r.get(1).toString());
            row.add(r.get(2));
            row.add(r.get(3));
            tongTienPhat+=Integer.parseInt(r.get(3).toString());
            modelPP.addRow(row);
        }
        tbPhieuPhat.setModel(modelPP);
        lbSoLP.setText("Tổng số lỗi phạt: " + tongLoiPhat);
        lbTienPhat.setText("Tổng tiền phạt: " + tongTienPhat + " VNĐ");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ThongKe thongke = new ThongKe();
                thongke.setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDong;
    private javax.swing.JButton btTaoMoi;
    private javax.swing.JButton btThongKe;
    private javax.swing.JComboBox<String> cbQuy;
    private javax.swing.JComboBox<String> cbThang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbSachCT;
    private javax.swing.JLabel lbSachDM;
    private javax.swing.JLabel lbSachDT;
    private javax.swing.JLabel lbSoLP;
    private javax.swing.JLabel lbSoSN;
    private javax.swing.JLabel lbTienChi;
    private javax.swing.JLabel lbTienPhat;
    private javax.swing.JRadioButton raNam;
    private javax.swing.JRadioButton raQuy;
    private javax.swing.JRadioButton raThang;
    private javax.swing.JTable tbPhieuMuon;
    private javax.swing.JTable tbPhieuNhap;
    private javax.swing.JTable tbPhieuPhat;
    private javax.swing.JTextField txDen;
    private javax.swing.JTextField txNam;
    private javax.swing.JTextField txTu;
    // End of variables declaration//GEN-END:variables
    class RoundedPanel extends JPanel {

        private Color backgroundColor;
        private int cornerRadius = 15;

        public RoundedPanel(LayoutManager layout, int radius) {
            super(layout);
            cornerRadius = radius;
        }

        public RoundedPanel(LayoutManager layout, int radius, Color bgColor) {
            super(layout);
            cornerRadius = radius;
            backgroundColor = bgColor;
        }

        public RoundedPanel(int radius) {
            super();
            cornerRadius = radius;

        }

        public RoundedPanel(int radius, Color bgColor) {
            super();
            cornerRadius = radius;
            backgroundColor = bgColor;
        }

        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            Dimension arcs = new Dimension(cornerRadius, cornerRadius);
            int width = getWidth();
            int height = getHeight();
            Graphics2D graphics = (Graphics2D) g;
            graphics.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            //Draws the rounded panel with borders.
            if (backgroundColor != null) {
                graphics.setColor(backgroundColor);
            } else {
                graphics.setColor(getBackground());
            }
            graphics.fillRoundRect(0, 0, width - 1, height - 1, arcs.width, arcs.height); //paint background
            graphics.setColor(getForeground());
//            graphics.drawRoundRect(0, 0, width-1, height-1, arcs.width, arcs.height); //paint border
//             
        }
    }
}
