
package GUI;
import DTO.DocGiaDTO;
import BUS.DocGiaBUS;
import DAO.DocGiaDAO;
import DAO.DAO;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.LayoutManager;
import java.awt.RenderingHints;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;
public class QuanLyDocGia extends javax.swing.JFrame {
    SimpleDateFormat dateFormat = new SimpleDateFormat("dd/mm/yyyy");
    private DefaultTableModel modelDocGia = new DefaultTableModel();
    private DefaultTableModel resOfSearch;
    private ArrayList<DocGiaDTO> listSearch=null;
    private int EditOrSearch=1;
    private DocGiaBUS docgiabus=new DocGiaBUS();
    /**
     * Creates new form QuanLyDocGia
     */
    public QuanLyDocGia() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new RoundedPanel(50, new Color(20, 20, 50));
        jLabel2 = new javax.swing.JLabel();
        txMaDG = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txHoDG = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txTenDG = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txNSDG = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        btThem = new javax.swing.JButton();
        btXoa = new javax.swing.JButton();
        btSua = new javax.swing.JButton();
        btTim = new javax.swing.JButton();
        btTatCa = new javax.swing.JButton();
        btTaoMoi = new javax.swing.JButton();
        btDong = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        btXacNhan = new javax.swing.JButton();
        btHuy = new javax.swing.JButton();
        cbTrinhDo = new javax.swing.JComboBox<>();
        cbGioiTinh = new javax.swing.JComboBox<>();
        txDCDG = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txDTDG = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txNNDG = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        lbDash = new javax.swing.JLabel();
        txNSDG2 = new javax.swing.JTextField();
        jPanel3 = new RoundedPanel(10, new Color(68, 187, 236));
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbDocGia = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocation(new java.awt.Point(280, 10));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(30, 29, 65));

        jPanel2.setBackground(new java.awt.Color(30, 29, 65));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Mã độc giả:");

        txMaDG.setBackground(new java.awt.Color(27, 26, 67));
        txMaDG.setForeground(new java.awt.Color(255, 255, 255));
        txMaDG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMaDGActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Họ lót:");

        txHoDG.setBackground(new java.awt.Color(27, 26, 67));
        txHoDG.setForeground(new java.awt.Color(255, 255, 255));
        txHoDG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txHoDGActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Tên:");

        txTenDG.setBackground(new java.awt.Color(27, 26, 67));
        txTenDG.setForeground(new java.awt.Color(255, 255, 255));
        txTenDG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txTenDGActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Ngày sinh:");

        txNSDG.setBackground(new java.awt.Color(27, 26, 67));
        txNSDG.setForeground(new java.awt.Color(255, 255, 255));
        txNSDG.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txNSDG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txNSDGActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Trình độ:");

        btThem.setBackground(new java.awt.Color(27, 26, 67));
        btThem.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btThem.setForeground(new java.awt.Color(255, 255, 255));
        btThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconImages/add.png"))); // NOI18N
        btThem.setText("Thêm");
        btThem.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btThem.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btThemActionPerformed(evt);
            }
        });

        btXoa.setBackground(new java.awt.Color(27, 26, 67));
        btXoa.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btXoa.setForeground(new java.awt.Color(255, 255, 255));
        btXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconImages/minus.png"))); // NOI18N
        btXoa.setText("Xoá");
        btXoa.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btXoa.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btXoaActionPerformed(evt);
            }
        });

        btSua.setBackground(new java.awt.Color(27, 26, 67));
        btSua.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btSua.setForeground(new java.awt.Color(255, 255, 255));
        btSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconImages/edit.png"))); // NOI18N
        btSua.setText("Sửa");
        btSua.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btSua.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSuaActionPerformed(evt);
            }
        });

        btTim.setBackground(new java.awt.Color(27, 26, 67));
        btTim.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btTim.setForeground(new java.awt.Color(255, 255, 255));
        btTim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconImages/search.png"))); // NOI18N
        btTim.setText("Tìm kiếm");
        btTim.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btTim.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTimActionPerformed(evt);
            }
        });

        btTatCa.setBackground(new java.awt.Color(165, 201, 63));
        btTatCa.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btTatCa.setForeground(new java.awt.Color(255, 255, 255));
        btTatCa.setText("Tất cả");
        btTatCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTatCaActionPerformed(evt);
            }
        });

        btTaoMoi.setBackground(new java.awt.Color(255, 153, 51));
        btTaoMoi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btTaoMoi.setForeground(new java.awt.Color(255, 255, 255));
        btTaoMoi.setText("Tạo mới");
        btTaoMoi.setToolTipText("");
        btTaoMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTaoMoiActionPerformed(evt);
            }
        });

        btDong.setBackground(new java.awt.Color(206, 81, 80));
        btDong.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btDong.setForeground(new java.awt.Color(255, 255, 255));
        btDong.setText("Đóng");
        btDong.setToolTipText("");
        btDong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDongActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Giới Tính:");

        btXacNhan.setBackground(new java.awt.Color(165, 201, 63));
        btXacNhan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btXacNhan.setForeground(new java.awt.Color(255, 255, 255));
        btXacNhan.setText("Xác nhận");
        btXacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btXacNhanActionPerformed(evt);
            }
        });

        btHuy.setBackground(new java.awt.Color(206, 81, 80));
        btHuy.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btHuy.setForeground(new java.awt.Color(255, 255, 255));
        btHuy.setText("Huỷ");
        btHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btHuyActionPerformed(evt);
            }
        });

        cbTrinhDo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn trình độ", "Tiểu học", "Trung học", "Đại học", "Cao học" }));
        cbTrinhDo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTrinhDoActionPerformed(evt);
            }
        });

        cbGioiTinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn giới tính", "Nam", "Nữ" }));
        cbGioiTinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbGioiTinhActionPerformed(evt);
            }
        });

        txDCDG.setBackground(new java.awt.Color(27, 26, 67));
        txDCDG.setForeground(new java.awt.Color(255, 255, 255));
        txDCDG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txDCDGActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Địa chỉ:");

        txDTDG.setBackground(new java.awt.Color(27, 26, 67));
        txDTDG.setForeground(new java.awt.Color(255, 255, 255));
        txDTDG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txDTDGActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Điện thoại:");

        txNNDG.setBackground(new java.awt.Color(27, 26, 67));
        txNNDG.setForeground(new java.awt.Color(255, 255, 255));
        txNNDG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txNNDGActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Nghề nghiệp:");

        lbDash.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbDash.setForeground(new java.awt.Color(255, 255, 255));
        lbDash.setText("-");

        txNSDG2.setBackground(new java.awt.Color(27, 26, 67));
        txNSDG2.setForeground(new java.awt.Color(255, 255, 255));
        txNSDG2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txNSDG2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txMaDG, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txHoDG, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cbGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel14)
                                            .addComponent(cbTrinhDo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txDCDG, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(txNSDG, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbDash)
                                .addGap(156, 156, 156))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txTenDG, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txDTDG, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                            .addComponent(txNNDG)
                            .addComponent(jLabel13))))
                .addGap(112, 112, 112)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btTatCa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btTim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btSua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btXoa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btTaoMoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btDong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btThem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 35, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(txNSDG2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(btXacNhan)
                        .addGap(26, 26, 26)
                        .addComponent(btHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel15)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txMaDG, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbTrinhDo)
                            .addComponent(cbGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txHoDG, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txDCDG, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txTenDG, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txDTDG, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txNNDG, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbDash, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txNSDG2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txNSDG, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btThem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btSua, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btTim, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btTatCa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btTaoMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btDong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btXacNhan)
                    .addComponent(btHuy))
                .addGap(319, 319, 319))
        );

        btXacNhan.setVisible(false);
        btHuy.setVisible(false);
        lbDash.setVisible(false);
        txNSDG2.setVisible(false);

        jPanel3.setBackground(new java.awt.Color(30, 29, 65));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÝ ĐỘC GIẢ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
        );

        tbDocGia.setBackground(new java.awt.Color(20, 20, 50));
        tbDocGia.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tbDocGia.setForeground(new java.awt.Color(255, 255, 255));
        tbDocGia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Đọc Giả", "Họ Lót", "Tên ", "Ngày Sinh", "Giới Tính", "Điện Thoại", "Địa Chỉ", "Nghề Nghiệp", "Trình Độ"
            }
        ));
        tbDocGia.setGridColor(new java.awt.Color(255, 255, 255));
        tbDocGia.setRowHeight(25);
        tbDocGia.setShowGrid(true);
        tbDocGia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDocGiaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbDocGia);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbTrinhDoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTrinhDoActionPerformed
    String selectedItem = (String) cbTrinhDo.getSelectedItem();
    }//GEN-LAST:event_cbTrinhDoActionPerformed

    private void btHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btHuyActionPerformed
        // TODO add your handling code here:
        if(EditOrSearch==1){
            txMaDG.setEditable(true);
            tbDocGia.setEnabled(true);
            btThem.setEnabled(true);
            btXoa.setEnabled(true);
            btTim.setEnabled(true);
            btTatCa.setEnabled(true);
            btXacNhan.setVisible(false);
            btHuy.setVisible(false);
        }
        else{
            lbDash.setVisible(false);
            txNSDG2.setVisible(false);
            txMaDG.setEditable(true);
            tbDocGia.setEnabled(true);
            btThem.setEnabled(true);         
            btTim.setEnabled(true);
            btTatCa.setEnabled(true);
            btXacNhan.setVisible(false);
            btHuy.setVisible(false);
            btXacNhan.setVisible(false);
            btHuy.setVisible(false);
        }
        EditOrSearch=-1;
    }//GEN-LAST:event_btHuyActionPerformed

    private void btXacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btXacNhanActionPerformed
        // TODO add your handling code here:
        if(EditOrSearch==1){       
            Edit();
        }
        else{       
            Search();
            EditOrSearch=0;
        }
    }//GEN-LAST:event_btXacNhanActionPerformed

    private void tbDocGiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDocGiaMouseClicked
        int i = tbDocGia.getSelectedRow();
        if (docgiabus.getList().size() > 0) {
            DocGiaDTO docgia = new DocGiaDTO();
            if(EditOrSearch!=0)
                docgia = docgiabus.getList().get(i);
            else{
                if(listSearch.size()>0)
                    docgia= listSearch.get(i);
                else
                    docgia = docgiabus.getList().get(i);
            }
            txMaDG.setText(docgia.getMaDocGia());
            txHoDG.setText(docgia.getHoLot());
            txTenDG.setText(docgia.getTen());
            if(EditOrSearch!=0)
                txNSDG.setText(docgia.getNgaySinh());
            if(docgia.getGioiTinh()==1)
                cbGioiTinh.setSelectedIndex(1);
            else 
                cbGioiTinh.setSelectedIndex(2);
            txDCDG.setText(docgia.getDiaChi());
            txDTDG.setText(docgia.getDienThoai());
            txNNDG.setText(docgia.getNgheNghiep());
            for(int j=0;j<cbTrinhDo.getItemCount();j++)
                if(cbTrinhDo.getItemAt(j).equals(docgia.getTrinhDo()))
            cbTrinhDo.setSelectedIndex(j);
        }
    }//GEN-LAST:event_tbDocGiaMouseClicked

    private void btDongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDongActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btDongActionPerformed

    private void btTaoMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTaoMoiActionPerformed
        // TODO add your handling code here:
        if(tbDocGia.isEnabled())
            txMaDG.setText("");
        txHoDG.setText("");
        txTenDG.setText("");
        txNSDG.setText("");
        if(EditOrSearch==0)
            txNSDG2.setText("");
        cbGioiTinh.setSelectedIndex(0);
        txDCDG.setText("");
        txDTDG.setText("");
        txNNDG.setText("");
        cbTrinhDo.setSelectedIndex(0);
        
    }//GEN-LAST:event_btTaoMoiActionPerformed

    private void btTatCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTatCaActionPerformed
        // TODO add your handling code here:
        if (docgiabus.getList().size()>0)
            tbDocGia.setModel(modelDocGia);
        EditOrSearch=-1;
    }//GEN-LAST:event_btTatCaActionPerformed

    private void btTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTimActionPerformed
        // TODO add your handling code here:
        EditOrSearch=0;
        lbDash.setVisible(true);
        txNSDG2.setVisible(true);
        btXacNhan.setText("Tìm");
        btXacNhan.setVisible(true);
        btHuy.setVisible(true);
    }//GEN-LAST:event_btTimActionPerformed

    private void btSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSuaActionPerformed
        int i=tbDocGia.getSelectedRow();
        if(i<0){
            JOptionPane.showMessageDialog(null, "Chọn độc giả cần chỉnh sửa", "Chú ý!", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        EditOrSearch=1;
        txMaDG.setEditable(false);
        tbDocGia.setEnabled(false);
        btThem.setEnabled(false);
        btXoa.setEnabled(false);
        btTim.setEnabled(false);
        btTatCa.setEnabled(false);
        btXacNhan.setText("Sửa");
        btXacNhan.setVisible(true);
        btHuy.setVisible(true);
    }//GEN-LAST:event_btSuaActionPerformed

    private void btThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btThemActionPerformed
        if(!Validate())
            return;

        DocGiaDTO docgia=new DocGiaDTO();
        docgia.setMaDocGia(txMaDG.getText());
        docgia.setHoLot(txHoDG.getText());
        docgia.setTen(txTenDG.getText());
        docgia.setNgaySinh(txNSDG.getText());
        if(cbGioiTinh.getSelectedItem().equals("Nam"))
            docgia.setGioiTinh(1);
        else
            docgia.setGioiTinh(0);
        docgia.setDienThoai(txDTDG.getText());
        docgia.setDiaChi(txDCDG.getText());
        docgia.setNgheNghiep(txNNDG.getText());
        docgia.setTrinhDo(cbTrinhDo.getSelectedItem().toString());

        try {
            docgiabus.Add(docgia);
        } catch (Exception ex) {
            Logger.getLogger(QuanLyDocGia.class.getName()).log(Level.SEVERE, null, ex);
        }

        Vector row=new Vector();
        row.add(docgia.getMaDocGia());
        row.add(docgia.getHoLot());
        row.add(docgia.getTen());
        row.add(docgia.getNgaySinh());
        if(docgia.getGioiTinh()==1)
            row.add("Nam");
        else 
            row.add("Nữ");              
        row.add(docgia.getDienThoai());
        row.add(docgia.getDiaChi());
        row.add(docgia.getNgheNghiep());
        row.add(docgia.getTrinhDo());
        modelDocGia.addRow(row);

        tbDocGia.setModel(modelDocGia);

    }//GEN-LAST:event_btThemActionPerformed

    private void txNNDGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txNNDGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txNNDGActionPerformed

    private void txDTDGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txDTDGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txDTDGActionPerformed

    private void txDCDGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txDCDGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txDCDGActionPerformed

    private void txNSDGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txNSDGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txNSDGActionPerformed

    private void txTenDGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txTenDGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txTenDGActionPerformed

    private void txHoDGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txHoDGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txHoDGActionPerformed

    private void txMaDGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMaDGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txMaDGActionPerformed

    private void btXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btXoaActionPerformed
        int i = tbDocGia.getSelectedRow();
        if(docgiabus.getList().size()>0){
            try {
                docgiabus.Remove(docgiabus .getList().get(i).getMaDocGia());
            } catch (Exception ex) {
                Logger.getLogger(QuanLyDocGia.class.getName()).log(Level.SEVERE, null, ex);
            }
            modelDocGia.removeRow(i);
            tbDocGia.setModel(modelDocGia);
            txMaDG.setText("");
            txHoDG.setText("");
            txTenDG.setText("");
            txNSDG.setText("");
            cbGioiTinh.setSelectedIndex(0);
            txDTDG.setText("");
            txDCDG.setText("");
            txNNDG.setText("");
            cbTrinhDo.setSelectedIndex(0);
        }
    }//GEN-LAST:event_btXoaActionPerformed

    private void cbGioiTinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbGioiTinhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbGioiTinhActionPerformed

    private void txNSDG2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txNSDG2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txNSDG2ActionPerformed
    public void List() throws Exception{
        if(docgiabus.getList()==null)
            docgiabus.listDocGia();
        ArrayList<DocGiaDTO> listMS= docgiabus.getList();
        Vector header=new Vector();
            header.add("Mã Đọc Giả");
            header.add("Họ Lót");
            header.add("Tên");
            header.add("Ngày Sinh");
            header.add("Giới Tính");
            header.add("Điện Thoại");
            header.add("Địa Chỉ");
            header.add("Nghề Nghiệp");
            header.add("Trình Độ");
            
        if (modelDocGia.getRowCount() == 0) 
                modelDocGia = new DefaultTableModel(header, 0);
        for(DocGiaDTO dg: listMS) {
            Vector row=new Vector();
            row.add(dg.getMaDocGia());
            row.add(dg.getHoLot());
            row.add(dg.getTen());
            row.add(dg.getNgaySinh());
            if(dg.getGioiTinh()==1)
                row.add("Nam");
            else 
                row.add("Nữ");
            row.add(dg.getDienThoai());
            row.add(dg.getDiaChi());
            row.add(dg.getNgheNghiep());
            row.add(dg.getTrinhDo());
            modelDocGia.addRow(row);
        }
        tbDocGia.setModel(modelDocGia);
    }
    private void Edit(){
        if(!Validate())
            return;
        int i=tbDocGia.getSelectedRow();
        if(docgiabus.getList().size()>0){
            DocGiaDTO dg=new DocGiaDTO();

            dg.setMaDocGia(txMaDG.getText());
            dg.setHoLot(txHoDG.getText());
            dg.setTen(txTenDG.getText());
            dg.setNgaySinh(txNSDG.getText());
            if(cbGioiTinh.getSelectedItem().equals("Nam"))
                dg.setGioiTinh(1);
            else 
                dg.setGioiTinh(0);
            dg.setDienThoai(txDTDG.getText());
            dg.setDiaChi(txDCDG.getText());
            dg.setNgheNghiep(txNNDG.getText());
            dg.setTrinhDo(cbTrinhDo.getSelectedItem().toString());

            try {
                docgiabus.Edit(dg);
            } catch (Exception ex) {
                Logger.getLogger(QuanLyDocGia.class.getName()).log(Level.SEVERE, null, ex);
            }

            modelDocGia.setValueAt(dg.getMaDocGia(), i, 0);
            modelDocGia.setValueAt(dg.getHoLot(), i, 1);
            modelDocGia.setValueAt(dg.getTen(), i, 2);
            modelDocGia.setValueAt(dg.getNgaySinh(), i, 3);
            if(dg.getGioiTinh()==1)
                modelDocGia.setValueAt("Nam", i, 4);
            else 
                modelDocGia.setValueAt("Nữ", i, 4);
            modelDocGia.setValueAt(dg.getDienThoai(), i, 5);
            modelDocGia.setValueAt(dg.getDiaChi(), i, 6);
            modelDocGia.setValueAt(dg.getNgheNghiep(), i, 7);
            modelDocGia.setValueAt(dg.getTrinhDo(), i, 8);

            tbDocGia.setModel(modelDocGia);
        }
    }
    private void Search(){
        if(docgiabus.getList().isEmpty()){
            return;
        }
        String MaDocGia, HoDocGia, TenDocGia, Ngaysinh, Ngaysinh2, Diachi, Dienthoai, Nghenghiep, Trinhdo;
        int GioiTinh = 0;
        MaDocGia=txMaDG.getText();
        HoDocGia=txHoDG.getText();
        TenDocGia=txTenDG.getText();
        Ngaysinh=txNSDG.getText().toString();
        Ngaysinh2=txNSDG2.getText().toString();
        if(!Ngaysinh.equals("")){
            if(ValidateDate(Ngaysinh)==1){
                JOptionPane.showMessageDialog(null, "Ngày sinh phải ở định dạng dd-mm-yyyy", "Chú ý!", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            else if(ValidateDate(Ngaysinh)==2) {
                JOptionPane.showMessageDialog(null, "Ngày sinh không hợp lệ");
                return;
            }
        }
        if(!Ngaysinh2.equals("")){
            if(ValidateDate(Ngaysinh2)==1){
                JOptionPane.showMessageDialog(null, "Ngày sinh phải ở định dạng dd-mm-yyyy", "Chú ý!", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            else if(ValidateDate(Ngaysinh2)==2) {
                JOptionPane.showMessageDialog(null, "Ngày sinh không hợp lệ");
                return;
            }
        }
        switch(cbGioiTinh.getSelectedIndex()){
            case 0:
                GioiTinh=-1;
                break;
            case 1:
                GioiTinh=1;
                break;
            case 2:
                GioiTinh=0;
                break;
        }
        Diachi=txDCDG.getText();
        Dienthoai=txDTDG.getText();
        Nghenghiep=txNNDG.getText();
        Trinhdo = cbTrinhDo.getSelectedItem().toString();

        listSearch=new ArrayList<DocGiaDTO>();
        try {
            listSearch=docgiabus.Search(MaDocGia, HoDocGia, TenDocGia, Ngaysinh, Ngaysinh2, GioiTinh, Dienthoai, Diachi, Nghenghiep, Trinhdo);
        } catch (Exception ex) {
            Logger.getLogger(QuanLyDocGia.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (listSearch.size()==0){
            JOptionPane.showMessageDialog(null, "Không tìm thấy kết quả nào!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            tbDocGia.setModel(modelDocGia);
        }
        else{
            Vector header = new Vector();
            header.add("Mã Đọc Giả");
            header.add("Họ Lót");
            header.add("Tên ");
            header.add("Ngày sinh");
            header.add("Giới Tính");
            header.add("Điện Thoại");
            header.add("Địa Chỉ");
            header.add("Nghề Nghiệp");
            header.add("Trình Độ");
            resOfSearch = new DefaultTableModel(header, 0);
            for(DocGiaDTO d: listSearch){
                Vector row=new Vector();
                row.add(d.getMaDocGia());
                row.add(d.getHoLot());
                row.add(d.getTen());
                row.add(d.getNgaySinh());
                if(d.getGioiTinh()==1)
                    row.add("Nam");
                else 
                    row.add("Nữ");             
                row.add(d.getDienThoai());
                row.add(d.getDiaChi());
                row.add(d.getNgheNghiep());
                row.add(d.getTrinhDo());
                resOfSearch.addRow(row);
            }
            tbDocGia.setModel(resOfSearch);
        }
    }
    
    private boolean isLeapYear(int year){
        if(((year%4==0)&&(year%100!=0))||(year%400==0))
            return true;
        return false;
    }
    
    private int ValidateDate(String dateInput){
        if(!dateInput.matches("^\\d{2}-\\d{2}-\\d{4}$"))
            return 1;
        
        String[] date;
        date=dateInput.split("-");
        int day, month, year;
        day=Integer.parseInt(date[0]);
        month=Integer.parseInt(date[1]);
        year=Integer.parseInt(date[2]);
        
        if(month<1 || month>12)
            return 2;
        
        if(month==2){
            if(isLeapYear(year)){
                if(day<1||day>29)
                    return 2;
            }
            else{
                if(day<1||day>28)
                    return 2;     
            }
        }
        if(month==1||month==3||month==5||month==7||month==8||month==10||month==12){
            if(day<1||day>31){
                return 2;
            }
        }
        if(month==4||month==6||month==9||month==11){
            if(day<1||day>30)
                return 2;
        }
        return 0;
    }
    
    private boolean Validate(){
        String madocgia, hodocgia, tendocgia, ngaysinh, gioitinh, diachi, dienthoai, nghenghiep, trinhdo;
        
        madocgia=txMaDG.getText();
        hodocgia=txHoDG.getText();
        tendocgia=txTenDG.getText();
        ngaysinh=txNSDG.getText();
        gioitinh=(String) cbGioiTinh.getSelectedItem();
        diachi=txDCDG.getText();
        dienthoai=txDTDG.getText();
        nghenghiep=txNNDG.getText();
        trinhdo=(String) cbTrinhDo.getSelectedItem();
        if(madocgia.equals("") || hodocgia.equals("") || tendocgia.equals("") || ngaysinh.equals("") || gioitinh.equals("Chọn giới tính") || diachi.equals("") || dienthoai.equals("") || nghenghiep.equals("") || trinhdo.equals("Chọn trình độ") ){
            JOptionPane.showMessageDialog(null, "Vui lòng nhập đủ thông tin", "Chú ý!", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }
        
        if(EditOrSearch!=1){
            for(DocGiaDTO docgia: docgiabus.getList()){
                if(madocgia.equals(docgia.getMaDocGia())){
                    JOptionPane.showMessageDialog(null, "Mã độc giả đã tồn tại", "Chú ý!", JOptionPane.INFORMATION_MESSAGE);
                    return false;
                }
            }
        }
        
        if(!dienthoai.matches("^\\d+")){
            JOptionPane.showMessageDialog(null, "Số điện thoại phải ở định dạng số", "Chú ý!", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }
        
 
        if(ValidateDate(ngaysinh)==1){
            JOptionPane.showMessageDialog(null, "Ngày sinh phải ở định dạng dd-mm-yyyy", "Chú ý!", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }
        else if(ValidateDate(ngaysinh)==2) {
            JOptionPane.showMessageDialog(null, "Ngày sinh không hợp lệ");
            return false;
        }
        
        return true;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyDocGia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyDocGia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyDocGia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyDocGia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                QuanLyDocGia QLDG=new QuanLyDocGia();
                try {
                    QLDG.List();          
                } catch (Exception ex) { 
                    Logger.getLogger(QuanLyDocGia.class.getName()).log(Level.SEVERE, null, ex);
                }
                QLDG.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDong;
    private javax.swing.JButton btHuy;
    private javax.swing.JButton btSua;
    private javax.swing.JButton btTaoMoi;
    private javax.swing.JButton btTatCa;
    private javax.swing.JButton btThem;
    private javax.swing.JButton btTim;
    private javax.swing.JButton btXacNhan;
    private javax.swing.JButton btXoa;
    private javax.swing.JComboBox<String> cbGioiTinh;
    private javax.swing.JComboBox<String> cbTrinhDo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbDash;
    private javax.swing.JTable tbDocGia;
    private javax.swing.JTextField txDCDG;
    private javax.swing.JTextField txDTDG;
    private javax.swing.JTextField txHoDG;
    private javax.swing.JTextField txMaDG;
    private javax.swing.JTextField txNNDG;
    private javax.swing.JTextField txNSDG;
    private javax.swing.JTextField txNSDG2;
    private javax.swing.JTextField txTenDG;
    // End of variables declaration//GEN-END:variables
    class RoundedPanel extends JPanel
    {
        private Color backgroundColor;
        private int cornerRadius = 15;
        public RoundedPanel(LayoutManager layout, int radius) {
            super(layout);
            cornerRadius = radius;
        }
        public RoundedPanel(LayoutManager layout, int radius, Color bgColor) {
            super(layout);
            cornerRadius = radius;
            backgroundColor = bgColor;
        }
        public RoundedPanel(int radius) {
            super();
            cornerRadius = radius;
            
        }
        public RoundedPanel(int radius, Color bgColor) {
            super();
            cornerRadius = radius;
            backgroundColor = bgColor;
        }
        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            Dimension arcs = new Dimension(cornerRadius, cornerRadius);
            int width = getWidth();
            int height = getHeight();
            Graphics2D graphics = (Graphics2D) g;
            graphics.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            //Draws the rounded panel with borders.
            if (backgroundColor != null) {
                graphics.setColor(backgroundColor);
            } else {
                graphics.setColor(getBackground());
            }
            graphics.fillRoundRect(0, 0, width-1, height-1, arcs.width, arcs.height); //paint background
            graphics.setColor(getForeground());
//            graphics.drawRoundRect(0, 0, width-1, height-1, arcs.width, arcs.height); //paint border
//             
        }
    }
}
