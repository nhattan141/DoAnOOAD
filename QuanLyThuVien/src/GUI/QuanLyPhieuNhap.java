/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

/**
 *
 * @author ACER
 */
import BUS.PhieuNhapHangBUS;
import DTO.PhieuNhapHangDTO;
import BUS.CTPhieuNhapBUS;
import DTO.CTPhieuNhapDTO;
import BUS.SachBUS;
import DTO.SachDTO;
import BUS.NhaCungCapBUS;
import DTO.NhaCungCapDTO;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.LayoutManager;
import java.awt.RenderingHints;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import javax.swing.JOptionPane;


public class QuanLyPhieuNhap extends javax.swing.JFrame {
    private DefaultTableModel modelPN = new DefaultTableModel();
    private DefaultTableModel modelChitiet = new DefaultTableModel();
    private DefaultTableModel modelMainSub;
    private DefaultTableModel resOfSearch;
    private ArrayList<CTPhieuNhapDTO> listCT=new ArrayList<>();
    private int mode=0;
    private String position;
    private int EditOrSearch;
    private PhieuNhapHangBUS phieunhapbus=new PhieuNhapHangBUS();
    private CTPhieuNhapBUS chitietbus=new CTPhieuNhapBUS();
    

    /**
     * Creates new form QuanLyPhieuNhap
     */
    public QuanLyPhieuNhap() {
        initComponents();
        tbPN.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent me) {

            }

            @Override
            public void mousePressed(MouseEvent me) {
                Onclick();
            }

            @Override
            public void mouseReleased(MouseEvent me) {

            }

            @Override
            public void mouseEntered(MouseEvent me) {

            }

            @Override
            public void mouseExited(MouseEvent me) {

            }
        });
          tbChitiet.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent me) {

            }

            @Override
            public void mousePressed(MouseEvent me) {
                Onclickct();
            }

            @Override
            public void mouseReleased(MouseEvent me) {

            }

            @Override
            public void mouseEntered(MouseEvent me) {

            }

            @Override
            public void mouseExited(MouseEvent me) {

            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new RoundedPanel(10, new Color(68, 187, 236));
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tfMaPN = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfMaNCC = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfMaNhanVien = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tfNN = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btMaNCC = new javax.swing.JButton();
        btMaNhanVien = new javax.swing.JButton();
        btThem = new javax.swing.JButton();
        btXoa = new javax.swing.JButton();
        btSua = new javax.swing.JButton();
        btTim = new javax.swing.JButton();
        btTatCa = new javax.swing.JButton();
        btTaoMoi = new javax.swing.JButton();
        btXacNhan = new javax.swing.JButton();
        btHuy = new javax.swing.JButton();
        btDong = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        tfMaPNChiTiet = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tfMS = new javax.swing.JTextField();
        btMaSach = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        tfSoLuong = new javax.swing.JTextField();
        btThem1 = new javax.swing.JButton();
        btXoa1 = new javax.swing.JButton();
        btSua1 = new javax.swing.JButton();
        btTaoMoi1 = new javax.swing.JButton();
        btTimCt = new javax.swing.JButton();
        btAll = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tfDG = new javax.swing.JTextField();
        tfThanhTien = new javax.swing.JTextField();
        tfTongTien = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbPN = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbChitiet = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocation(new java.awt.Point(150, 0));

        jPanel1.setBackground(new java.awt.Color(30, 29, 65));

        jPanel2.setBackground(new java.awt.Color(30, 29, 65));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Quản Lý Nhập Hàng");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1179, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(30, 29, 65));

        jPanel4.setBackground(new java.awt.Color(30, 29, 65));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Phiếu Nhập", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Mã Phiếu Nhập: ");

        tfMaPN.setBackground(new java.awt.Color(27, 26, 67));
        tfMaPN.setForeground(new java.awt.Color(255, 255, 255));
        tfMaPN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfMaPNActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Mã Nhà Cung Cấp: ");

        tfMaNCC.setBackground(new java.awt.Color(27, 26, 67));
        tfMaNCC.setForeground(new java.awt.Color(255, 255, 255));
        tfMaNCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfMaNCCActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Mã Nhân Viên: ");

        tfMaNhanVien.setBackground(new java.awt.Color(27, 26, 67));
        tfMaNhanVien.setForeground(new java.awt.Color(255, 255, 255));
        tfMaNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfMaNhanVienActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Ngày Phiếu Nhập:");

        tfNN.setBackground(new java.awt.Color(27, 26, 67));
        tfNN.setForeground(new java.awt.Color(255, 255, 255));
        tfNN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNNActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Tổng Tiền:");

        btMaNCC.setBackground(new java.awt.Color(27, 26, 67));
        btMaNCC.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btMaNCC.setForeground(new java.awt.Color(255, 255, 255));
        btMaNCC.setText("...");
        btMaNCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMaNCCActionPerformed(evt);
            }
        });

        btMaNhanVien.setBackground(new java.awt.Color(27, 26, 67));
        btMaNhanVien.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btMaNhanVien.setForeground(new java.awt.Color(255, 255, 255));
        btMaNhanVien.setText("...");
        btMaNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMaNhanVienActionPerformed(evt);
            }
        });

        btThem.setBackground(new java.awt.Color(27, 26, 67));
        btThem.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btThem.setForeground(new java.awt.Color(255, 255, 255));
        btThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconImages/add.png"))); // NOI18N
        btThem.setText("Thêm");
        btThem.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btThem.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btThemActionPerformed(evt);
            }
        });

        btXoa.setBackground(new java.awt.Color(27, 26, 67));
        btXoa.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btXoa.setForeground(new java.awt.Color(255, 255, 255));
        btXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconImages/minus.png"))); // NOI18N
        btXoa.setText("Xoá");
        btXoa.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btXoa.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btXoaActionPerformed(evt);
            }
        });

        btSua.setBackground(new java.awt.Color(27, 26, 67));
        btSua.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btSua.setForeground(new java.awt.Color(255, 255, 255));
        btSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconImages/edit.png"))); // NOI18N
        btSua.setText("Sửa");
        btSua.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btSua.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSuaActionPerformed(evt);
            }
        });

        btTim.setBackground(new java.awt.Color(27, 26, 67));
        btTim.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btTim.setForeground(new java.awt.Color(255, 255, 255));
        btTim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconImages/search.png"))); // NOI18N
        btTim.setText("Tìm kiếm");
        btTim.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btTim.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTimActionPerformed(evt);
            }
        });

        btTatCa.setBackground(new java.awt.Color(165, 201, 63));
        btTatCa.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btTatCa.setForeground(new java.awt.Color(255, 255, 255));
        btTatCa.setText("Tất cả");
        btTatCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTatCaActionPerformed(evt);
            }
        });

        btTaoMoi.setBackground(new java.awt.Color(255, 153, 51));
        btTaoMoi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btTaoMoi.setForeground(new java.awt.Color(255, 255, 255));
        btTaoMoi.setText("Tạo mới");
        btTaoMoi.setToolTipText("");
        btTaoMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTaoMoiActionPerformed(evt);
            }
        });

        btXacNhan.setBackground(new java.awt.Color(165, 201, 63));
        btXacNhan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btXacNhan.setForeground(new java.awt.Color(255, 255, 255));
        btXacNhan.setText("Xác nhận");
        btXacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btXacNhanActionPerformed(evt);
            }
        });

        btHuy.setBackground(new java.awt.Color(206, 81, 80));
        btHuy.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btHuy.setForeground(new java.awt.Color(255, 255, 255));
        btHuy.setText("Huỷ");
        btHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btHuyActionPerformed(evt);
            }
        });

        btDong.setBackground(new java.awt.Color(206, 81, 80));
        btDong.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btDong.setForeground(new java.awt.Color(255, 255, 255));
        btDong.setText("Đóng");
        btDong.setToolTipText("");
        btDong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDongActionPerformed(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(30, 29, 65));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chi Tiết ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Mã Phiếu Nhập: ");

        tfMaPNChiTiet.setBackground(new java.awt.Color(27, 26, 67));
        tfMaPNChiTiet.setForeground(new java.awt.Color(255, 255, 255));
        tfMaPNChiTiet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfMaPNChiTietActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Mã Sách:");

        tfMS.setBackground(new java.awt.Color(27, 26, 67));
        tfMS.setForeground(new java.awt.Color(255, 255, 255));
        tfMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfMSActionPerformed(evt);
            }
        });

        btMaSach.setBackground(new java.awt.Color(27, 26, 67));
        btMaSach.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btMaSach.setForeground(new java.awt.Color(255, 255, 255));
        btMaSach.setText("...");
        btMaSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMaSachActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Số Lượng:");

        tfSoLuong.setBackground(new java.awt.Color(27, 26, 67));
        tfSoLuong.setForeground(new java.awt.Color(255, 255, 255));
        tfSoLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfSoLuongActionPerformed(evt);
            }
        });

        btThem1.setBackground(new java.awt.Color(27, 26, 67));
        btThem1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btThem1.setForeground(new java.awt.Color(255, 255, 255));
        btThem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconImages/add.png"))); // NOI18N
        btThem1.setText("Thêm");
        btThem1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btThem1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btThem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btThem1ActionPerformed(evt);
            }
        });

        btXoa1.setBackground(new java.awt.Color(27, 26, 67));
        btXoa1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btXoa1.setForeground(new java.awt.Color(255, 255, 255));
        btXoa1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconImages/minus.png"))); // NOI18N
        btXoa1.setText("Xoá");
        btXoa1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btXoa1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btXoa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btXoa1ActionPerformed(evt);
            }
        });

        btSua1.setBackground(new java.awt.Color(27, 26, 67));
        btSua1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btSua1.setForeground(new java.awt.Color(255, 255, 255));
        btSua1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconImages/edit.png"))); // NOI18N
        btSua1.setText("Sửa");
        btSua1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btSua1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btSua1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSua1ActionPerformed(evt);
            }
        });

        btTaoMoi1.setBackground(new java.awt.Color(255, 153, 51));
        btTaoMoi1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btTaoMoi1.setForeground(new java.awt.Color(255, 255, 255));
        btTaoMoi1.setText("Tạo mới");
        btTaoMoi1.setToolTipText("");
        btTaoMoi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTaoMoi1ActionPerformed(evt);
            }
        });

        btTimCt.setBackground(new java.awt.Color(27, 26, 67));
        btTimCt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btTimCt.setForeground(new java.awt.Color(255, 255, 255));
        btTimCt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconImages/search.png"))); // NOI18N
        btTimCt.setText("Tìm Kiếm");
        btTimCt.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btTimCt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTimCtActionPerformed(evt);
            }
        });

        btAll.setBackground(new java.awt.Color(165, 201, 63));
        btAll.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btAll.setForeground(new java.awt.Color(255, 255, 255));
        btAll.setText("Tất cả");
        btAll.setMaximumSize(new java.awt.Dimension(71, 25));
        btAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAllActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Tổng Tiền:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Đơn Giá:");

        tfDG.setBackground(new java.awt.Color(27, 26, 67));
        tfDG.setForeground(new java.awt.Color(255, 255, 255));
        tfDG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfDGActionPerformed(evt);
            }
        });

        tfThanhTien.setBackground(new java.awt.Color(27, 26, 67));
        tfThanhTien.setForeground(new java.awt.Color(255, 255, 255));
        tfThanhTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfThanhTienActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(tfMS, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btMaSach))
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btSua1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btXoa1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btTimCt, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btThem1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(tfThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfMaPNChiTiet, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11)
                                    .addComponent(tfDG, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(71, 71, 71)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btAll, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btTaoMoi1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(44, Short.MAX_VALUE))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(tfMaPNChiTiet, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfMS, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btMaSach, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addGap(7, 7, 7)
                        .addComponent(tfDG, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(btThem1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btXoa1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btSua1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btTimCt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btAll, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btTaoMoi1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addGap(17, 17, 17)
                .addComponent(tfThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tfMaPNChiTiet.setEditable(false);
        tfDG.setEditable(false);
        tfThanhTien.setEditable(false);

        tfTongTien.setBackground(new java.awt.Color(27, 26, 67));
        tfTongTien.setForeground(new java.awt.Color(255, 255, 255));
        tfTongTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTongTienActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(btXacNhan)
                                .addGap(30, 30, 30)
                                .addComponent(btHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(tfMaNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btMaNCC))
                            .addComponent(tfMaPN, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(tfMaNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btMaNhanVien))
                            .addComponent(tfNN, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btTaoMoi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btTatCa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btTim, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btSua, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btXoa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btThem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btDong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfMaPN, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btThem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfMaNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btMaNCC))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tfMaNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btMaNhanVien))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfNN, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addGap(4, 4, 4)
                                .addComponent(tfTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btXacNhan)
                                    .addComponent(btHuy)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(btTim, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btTatCa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btTaoMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btDong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btSua, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9))
        );

        btXacNhan.setVisible(false);
        btHuy.setVisible(false);
        tfTongTien.setEditable(false);

        jPanel5.setBackground(new java.awt.Color(30, 29, 65));

        tbPN.setBackground(new java.awt.Color(20, 20, 50));
        tbPN.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tbPN.setForeground(new java.awt.Color(255, 255, 255));
        tbPN.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã Phiểu Nhập", "Tên Nhà Cung Cấp", "Tên Nhân Viên", "Ngày Phiếu Nhập", "Tổng Tiền"
            }
        ));
        tbPN.setGridColor(new java.awt.Color(255, 255, 255));
        tbPN.setRowHeight(30);
        jScrollPane2.setViewportView(tbPN);

        tbChitiet.setBackground(new java.awt.Color(20, 20, 50));
        tbChitiet.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tbChitiet.setForeground(new java.awt.Color(255, 255, 255));
        tbChitiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã Phiếu Nhập", "Tên Sách", "Số Lượng", "Đơn Giá", "Thành Tiền"
            }
        ));
        tbChitiet.setGridColor(new java.awt.Color(255, 255, 255));
        tbChitiet.setPreferredSize(new java.awt.Dimension(375, 400));
        tbChitiet.setRowHeight(25);
        jScrollPane1.setViewportView(tbChitiet);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 694, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 694, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel4.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(528, 528, 528))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 805, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfMaPNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfMaPNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfMaPNActionPerformed

    private void tfMaNCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfMaNCCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfMaNCCActionPerformed

    private void tfMaNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfMaNhanVienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfMaNhanVienActionPerformed

    private void tfNNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNNActionPerformed

    private void btMaNCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMaNCCActionPerformed
        // TODO add your handling code here:
        MaNhaCungCapSelector MaNCCSel=new  MaNhaCungCapSelector();
        try {
            MaNCCSel.List();
        } catch (Exception ex) {
            Logger.getLogger(QuanLyPhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        MaNCCSel.setVisible(true);
    }//GEN-LAST:event_btMaNCCActionPerformed

    private void btMaNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMaNhanVienActionPerformed
        // TODO add your handling code here:
        MaNhanVienSelector MaNVSel=new  MaNhanVienSelector();
        try {
            MaNVSel.List();
        } catch (Exception ex) {
            Logger.getLogger(QuanLyMuonTra.class.getName()).log(Level.SEVERE, null, ex);
        }
        MaNVSel.setVisible(true);
    }//GEN-LAST:event_btMaNhanVienActionPerformed

    private void btThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btThemActionPerformed
        // TODO add your handling code here:
        // if(!ValidateThemPhieuMuon())
        //return;
        position="phieunhap";
        if(!validateBtThem())
            return;
        PhieuNhapHangDTO phieunhap=new PhieuNhapHangDTO();

        phieunhap.setMaPNH(tfMaPN.getText());
        phieunhap.setNcc(tfMaNCC.getText());
        phieunhap.setNv(tfMaNhanVien.getText());
        phieunhap.setNgayPH(tfNN.getText());
        phieunhap.setTongtien(0);

        try {
            phieunhapbus.Add(phieunhap);
        } catch (Exception ex) {
            Logger.getLogger(QuanLyMuonTra.class.getName()).log(Level.SEVERE, null, ex);
        }

        Vector row=new Vector();
        row.add(phieunhap.getMaPNH());
        row.add(phieunhap.getNcc());
        row.add(phieunhap.getNv());
        row.add(phieunhap.getNgayPH());
        row.add(phieunhap.getTongtien());

        modelPN.addRow(row);

        tbPN.setModel(modelPN);
    }//GEN-LAST:event_btThemActionPerformed

    private void btXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btXoaActionPerformed
        int i = tbPN.getSelectedRow();
        if(phieunhapbus.getList().size()>0){
            try {
                phieunhapbus.Remove(phieunhapbus.getList().get(i).getMaPNH());
            } catch (Exception ex) {
                Logger.getLogger(QuanLyMuonTra.class.getName()).log(Level.SEVERE, null, ex);
            }
            modelPN.removeRow(i);
            tbPN.setModel(modelPN);

            tfMaPN.setText("");
            tfMaNCC.setText("");
            tfMaNhanVien.setText("");
            tfNN.setText("");
            tfTongTien.setText("");
        }
    }//GEN-LAST:event_btXoaActionPerformed

    private void btSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSuaActionPerformed
        int i = tbPN.getSelectedRow();
        if (i < 0) {
            JOptionPane.showMessageDialog(null, "Chọn phiếu nhập cần chỉnh sửa", "Chú ý!", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        EditOrSearch=1;
        tfMaPN.setEditable(false);
        tbPN.setEnabled(false);
        btThem.setEnabled(false);
        btXoa.setEnabled(false);
        btTim.setEnabled(false);
        btTatCa.setEnabled(false);
        btXacNhan.setVisible(true);
        btHuy.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_btSuaActionPerformed

    private void btTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTimActionPerformed
        // TODO add your handling code here:
        EditOrSearch=0;
        btXacNhan.setText("Tìm");
        btXacNhan.setVisible(true);
        btHuy.setVisible(true);
    }//GEN-LAST:event_btTimActionPerformed

    private void btTatCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTatCaActionPerformed
        if (phieunhapbus.getList().size()>0)
        tbPN.setModel(modelPN);
    }//GEN-LAST:event_btTatCaActionPerformed

    private void btTaoMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTaoMoiActionPerformed
        if(tbPN.isEnabled())
        tfMaPN.setText("");
        /*if(EditOrSearch==0){
            tf.setText("");
            txSoLuongMax.setText("");
            txDonGiaMax.setText("");
        }*/
        tfMaNCC.setText("");
        tfMaNhanVien.setText("");
        tfNN.setText("");
        tfTongTien.setText("");
    }//GEN-LAST:event_btTaoMoiActionPerformed

    private void btXacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btXacNhanActionPerformed
        if(EditOrSearch==1){
            Edit();
        }
        else{
            Search();
        }
    }//GEN-LAST:event_btXacNhanActionPerformed

    private void btHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btHuyActionPerformed
        if(EditOrSearch==1){
            tfMaPN.setEditable(true);
            tbPN.setEnabled(true);
            btThem.setEnabled(true);
            btXoa.setEnabled(true);
            btTim.setEnabled(true);
            btTatCa.setEnabled(true);
            //btNhapEx.setEnabled(true);
            //btXuatEx.setEnabled(true);
            btXacNhan.setVisible(false);
            btHuy.setVisible(false);
        }
        else{
            btXacNhan.setVisible(false);
            btHuy.setVisible(false);
        }
    }//GEN-LAST:event_btHuyActionPerformed

    private void btDongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDongActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btDongActionPerformed

    private void btAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAllActionPerformed
        // TODO add your handling code here:
        if (chitietbus.getList().size()>0)
        tbChitiet.setModel(modelChitiet);
        mode=0;
    }//GEN-LAST:event_btAllActionPerformed

    private void btTimCtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTimCtActionPerformed
        Searchct();
    }//GEN-LAST:event_btTimCtActionPerformed

    private void btTaoMoi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTaoMoi1ActionPerformed
        // TODO add your handling code here:
        if(tbChitiet.isEnabled())
        tfMaPNChiTiet.setText("");
        /*if(EditOrSearch==0){
            tf.setText("");
            txSoLuongMax.setText("");
            txDonGiaMax.setText("");
        }*/
        tfMS.setText("");
        tfSoLuong.setText("");
        tfDG.setText("");
        tfThanhTien.setText("");
    }//GEN-LAST:event_btTaoMoi1ActionPerformed

    private void btSua1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSua1ActionPerformed
        // TODO add your handling code here:
        int i = tbChitiet.getSelectedRow();
        if (i < 0) {
            JOptionPane.showMessageDialog(null, "Chọn chi tiết phiếu nhập cần chỉnh sửa", "Chú ý!", JOptionPane.INFORMATION_MESSAGE);
            return;
        } else EditCt();
    }//GEN-LAST:event_btSua1ActionPerformed

    private void btXoa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btXoa1ActionPerformed
        // TODO add your handling code here:
        int i = tbChitiet.getSelectedRow();
        if(chitietbus.getList().size()>0){
            CTPhieuNhapDTO ct=new CTPhieuNhapDTO();
            if(mode==0){
                ct=chitietbus.getList().get(i);
            }
            else{
                ct=listCT.get(i);
            }
            try {
                chitietbus.Remove(ct.getPhieunhap(), ct.getSach(), ct.getSoluong(), ct.getDongia(), ct.getThanhtien());
            } catch (Exception ex) {
                Logger.getLogger(QuanLyPhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
            }
            modelChitiet.removeRow(i);
            tbChitiet.setModel(modelChitiet);

            tfMaPNChiTiet.setText("");
            tfMS.setText("");
            tfSoLuong.setText("");
            tfDG.setText("");
            tfThanhTien.setText("");
            
            int tongtienold=0, tongtiennew=0;
            tongtienold=(int) modelPN.getValueAt(tbPN.getSelectedRow(), 4);
            tongtiennew=tongtienold-ct.getThanhtien();
            modelPN.setValueAt(tongtiennew, tbPN.getSelectedRow(), 4);

            Vector row=new Vector();
            row.add(ct.getPhieunhap());
            row.add(ct.getSach());
            row.add(ct.getSoluong());
            row.add(ct.getDongia());
            row.add(ct.getThanhtien());
            
            modelChitiet.removeRow(i);

            tbChitiet.setModel(modelChitiet);
        }
    }//GEN-LAST:event_btXoa1ActionPerformed

    private void btThem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btThem1ActionPerformed
        // TODO add your handling code here:
        position="chitiet";
        if(!validateBtThem())
            return;
        CTPhieuNhapDTO ctphieunhap=new CTPhieuNhapDTO();
        
        int dongia, soluong, thanhtien;
        dongia=Integer.parseInt(tfDG.getText());
        soluong=Integer.parseInt(tfSoLuong.getText());
        thanhtien=soluong*dongia;
        
        ctphieunhap.setPhieunhap(tfMaPNChiTiet.getText());
        ctphieunhap.setSach(tfMS.getText());
        ctphieunhap.setSoluong(Integer.parseInt(tfSoLuong.getText()));
        ctphieunhap.setDongia(Integer.parseInt(tfDG.getText()));
        ctphieunhap.setThanhtien(thanhtien);


        try {
            chitietbus.Add(ctphieunhap);
        } catch (Exception ex) {
            Logger.getLogger(QuanLyMuonTra.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        int tongtienold=0, tongtiennew=0;
        tongtienold=(int) modelPN.getValueAt(tbPN.getSelectedRow(), 4);
        tongtiennew=tongtienold+thanhtien;
        modelPN.setValueAt(tongtiennew, tbPN.getSelectedRow(), 4);

        Vector row=new Vector();
        row.add(ctphieunhap.getPhieunhap());
        row.add(ctphieunhap.getSach());
        row.add(ctphieunhap.getSoluong());
        row.add(ctphieunhap.getDongia());
        row.add(ctphieunhap.getThanhtien());

            

        modelChitiet.addRow(row);

        tbChitiet.setModel(modelChitiet);
    }//GEN-LAST:event_btThem1ActionPerformed

    private void tfSoLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSoLuongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfSoLuongActionPerformed

    private void btMaSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMaSachActionPerformed
        // TODO add your handling code here:
        MaSachSelector MaSachSel=new  MaSachSelector();
        try {
            MaSachSel.List();
        } catch (Exception ex) {
            Logger.getLogger(QuanLySach.class.getName()).log(Level.SEVERE, null, ex);
        }
        MaSachSel.setVisible(true);
    }//GEN-LAST:event_btMaSachActionPerformed

    private void tfMaPNChiTietActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfMaPNChiTietActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfMaPNChiTietActionPerformed

    private void tfDGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfDGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfDGActionPerformed

    private void tfThanhTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfThanhTienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfThanhTienActionPerformed

    private void tfTongTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTongTienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTongTienActionPerformed

    private void tfMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfMSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfMSActionPerformed
 public void ListPN() throws Exception{
        if(phieunhapbus.getList()==null)
             phieunhapbus.listPhieuNhapHang();
        ArrayList<PhieuNhapHangDTO> listPhieuNhapHang = phieunhapbus.getList();
        Vector header=new Vector();
        header.add("Mã Phiếu Nhập");
        header.add("Tên Nhà Cung Cấp");
        header.add("Tên Nhân Viên");
        header.add("Ngày Phiếu Nhập");
        header.add("Tổng Tiền");
        if(modelPN.getRowCount() == 0)
                modelPN = new DefaultTableModel(header, 0);
        for(PhieuNhapHangDTO ctphieunhap: listPhieuNhapHang) {
            Vector row=new Vector();
            row.add(ctphieunhap.getMaPNH());
            row.add(ctphieunhap.getNcc());
            row.add(ctphieunhap.getNv());
            row.add(ctphieunhap.getNgayPH());
            row.add(ctphieunhap.getTongtien());
            modelPN.addRow(row);
        }
        tbPN.setModel(modelPN);
    }
    public void ListChiTiet() throws Exception{
        if(chitietbus.getList()==null)
            chitietbus.listCTPhieuNhap();
        ArrayList<CTPhieuNhapDTO> listChiTiet = chitietbus.getList();
        Vector header = new Vector();
        header.add("Mã Phiếu Nhập");
        header.add("Mã Sách");
        header.add("Số Lượng");
        header.add("Đơn Giá");
        header.add("Thành Tiền");
        if(modelChitiet.getRowCount() == 0)
            modelChitiet = new DefaultTableModel(header, 0);
        for(CTPhieuNhapDTO chitiet: listChiTiet){
            Vector row=new Vector();
            row.add(chitiet.getPhieunhap());
            row.add(chitiet.getSach());
            row.add(chitiet.getSoluong());
            row.add(chitiet.getDongia());
            row.add(chitiet.getThanhtien());
            modelChitiet.addRow(row);
        }
        tbChitiet.setModel(modelChitiet);
    }
    private void Onclick() {
        int i = tbPN.getSelectedRow();
        if (phieunhapbus.getList().size() > 0) {
            mode=1;
            PhieuNhapHangDTO ctphieunhap = new PhieuNhapHangDTO();
            ctphieunhap = phieunhapbus.getList().get(i);
            
           tfMaPN.setText(ctphieunhap.getMaPNH());
           tfMaNhanVien.setText(ctphieunhap.getNv());
           tfMaNCC.setText(ctphieunhap.getNcc());
           tfNN.setText(ctphieunhap.getNgayPH());
           tfTongTien.setText (String.valueOf(ctphieunhap.getTongtien()));
           tfMaPNChiTiet.setText(ctphieunhap.getMaPNH());
           
           listCT.clear();
           for(CTPhieuNhapDTO ct: chitietbus.getList()){
               if(ct.getPhieunhap().equals(ctphieunhap.getMaPNH()))
                   listCT.add(ct);
           }
           
           Vector header=new Vector();
           header.add("Mã phiếu nhập");
           header.add("Tên sách");
           header.add("Số lượng");
           header.add("Đơn giá");
           header.add("Thành tiền");
           modelMainSub=new DefaultTableModel(header, 0);
           for(CTPhieuNhapDTO ct: listCT){
               Vector row=new Vector();
               row.add(ct.getPhieunhap());
               row.add(ct.getSach());
               row.add(ct.getSoluong());
               row.add(ct.getDongia());
               row.add(ct.getThanhtien());
               modelMainSub.addRow(row);
           }
           tbChitiet.setModel(modelMainSub);
   
        }
    }
    private void Onclickct() {
        int ict = tbChitiet.getSelectedRow();
        if(chitietbus.getList().size()>0){
            CTPhieuNhapDTO chitiet =new CTPhieuNhapDTO();
            if(mode!=1)
                chitiet = chitietbus.getList().get(ict);
            else
                chitiet = listCT.get(ict);
            
            tfMaPNChiTiet.setText(chitiet.getPhieunhap());
            tfMS.setText(chitiet.getSach());
            tfSoLuong.setText(String.valueOf(chitiet.getSoluong()));
            tfDG.setText(String.valueOf(chitiet.getDongia()));
            tfThanhTien.setText(String.valueOf(chitiet.getThanhtien()));
        }
    }
    private void Edit(){
        int i=tbPN.getSelectedRow();
        if(phieunhapbus.getList().size()>0){
            PhieuNhapHangDTO phieunhap=new PhieuNhapHangDTO();

            phieunhap.setMaPNH(tfMaPN.getText());
            phieunhap.setNcc(tfMaNCC.getText());
            phieunhap.setNv(tfMaNhanVien.getText());
            phieunhap.setNgayPH(tfNN.getText());
            phieunhap.setTongtien(Integer.parseInt(tfTongTien.getText()));
            
            try {
                phieunhapbus.Edit(phieunhap);
            } catch (Exception ex) {
                Logger.getLogger(QuanLyMuonTra.class.getName()).log(Level.SEVERE, null, ex);
            }

            modelPN.setValueAt(phieunhap.getMaPNH(), i, 0);
            modelPN.setValueAt(phieunhap.getNcc(), i, 1);
            modelPN.setValueAt(phieunhap.getNv(), i, 2);
            modelPN.setValueAt(phieunhap.getNgayPH(), i, 3);
            modelPN.setValueAt(phieunhap.getTongtien(), i, 4);

            tbPN.setModel(modelPN);
        }
        tfMaPN.setEditable(true);
        tbPN.setEnabled(true);
        btThem.setEnabled(true);
        btXoa.setEnabled(true);
        btTim.setEnabled(true);
        btTatCa.setEnabled(true);
        //btNhapEx.setEnabled(true);
        //btXuatEx.setEnabled(true);
        btXacNhan.setVisible(false);
        btHuy.setVisible(false);
    }
    private void EditCt(){
        int i=tbChitiet.getSelectedRow();
        if(chitietbus.getList().size()>0){
           CTPhieuNhapDTO ctphieunhap=new CTPhieuNhapDTO();

            ctphieunhap.setPhieunhap(tfMaPNChiTiet.getText());
            ctphieunhap.setSach(tfMS.getText());
            ctphieunhap.setSoluong(Integer.parseInt(tfSoLuong.getText()));
            ctphieunhap.setDongia(Integer.parseInt(tfDG.getText()));
            ctphieunhap.setThanhtien(Integer.parseInt(tfThanhTien.getText()));

            try {
                chitietbus.Edit(ctphieunhap);
            } catch (Exception ex) {
                Logger.getLogger(QuanLyMuonTra.class.getName()).log(Level.SEVERE, null, ex);
            }

            modelChitiet.setValueAt(ctphieunhap.getPhieunhap(), i, 0);
            modelChitiet.setValueAt(ctphieunhap.getSach(), i, 1);
            modelChitiet.setValueAt(ctphieunhap.getSoluong(), i, 2);
            modelChitiet.setValueAt(ctphieunhap.getDongia(), i, 3);
            modelChitiet.setValueAt(ctphieunhap.getThanhtien(), i, 4);

            tbChitiet.setModel(modelChitiet);
        }
    }
    
    private void Search(){
        if(phieunhapbus.getList().isEmpty()){
            return;
        }

        String MaPhieuNhap, MaNCC, MaNhanVien, NgayNhap;
        int TongTien;
        MaPhieuNhap=tfMaPN.getText();
        MaNCC=tfMaNCC.getText();
        MaNhanVien=tfMaNhanVien.getText();
        NgayNhap=tfNN.getText();
         TongTien=Integer.parseInt(tfTongTien.getText());

        ArrayList<PhieuNhapHangDTO> res=new ArrayList<PhieuNhapHangDTO>();
        try {
            res=phieunhapbus.Search(MaPhieuNhap, MaNCC, MaNhanVien, NgayNhap, TongTien);
        } catch (Exception ex) {
            Logger.getLogger(QuanLySach.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (res.size()==0)
            JOptionPane.showMessageDialog(null, "Không tìm thấy kết quả nào!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        else{
            Vector header = new Vector();
            header.add("Mã Phiếu Nhập");
            header.add("Tên Nhà Cung Cấp");
            header.add("Mã Nhân Viên");
            header.add("Ngày Nhập");
            header.add("Tổng Tiền");
            resOfSearch = new DefaultTableModel(header, 0);
            for(PhieuNhapHangDTO s: res){
                Vector row=new Vector();
                row.add(s.getMaPNH());
                row.add(s.getNcc());
                row.add(s.getNv());
                row.add(s.getNgayPH());
                row.add(s.getTongtien());
                resOfSearch.addRow(row);
            }
            tbPN.setModel(resOfSearch);
        }
    }
    private void Searchct(){
        if(chitietbus.getList().isEmpty()){
            return;
        }

        String MaPhieuNhap, MaSach;
        int SoLuong, DonGia, ThanhTien;

        MaPhieuNhap=tfMaPNChiTiet.getText();
        MaSach=tfMS.getText();
        if(tfSoLuong.getText().equals(""))
            SoLuong=-1;
        else
            SoLuong=Integer.parseInt(tfSoLuong.getText());
        if(tfDG.getText().equals(""))
            DonGia=-1;
        else
            DonGia=Integer.parseInt(tfDG.getText());
        if(tfThanhTien.getText().equals(""))
            ThanhTien=-1;
        else
            ThanhTien=Integer.parseInt(tfThanhTien.getText());

        ArrayList<CTPhieuNhapDTO> res=new ArrayList<CTPhieuNhapDTO>();
        try {
            res=chitietbus.Search(MaPhieuNhap, MaSach, SoLuong, SoLuong, DonGia, DonGia, ThanhTien, ThanhTien);
        } catch (Exception ex) {
            Logger.getLogger(QuanLySach.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (res.size()==0)
            JOptionPane.showMessageDialog(null, "Không tìm thấy kết quả nào!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        else{
            Vector header = new Vector();
            header.add("Mã Phiếu Nhập");
            header.add("Mã Sách");
            header.add("Số Lượng");
            header.add("Đơn Giá");
            header.add("Thành Tiền");

            resOfSearch = new DefaultTableModel(header, 0);
            for(CTPhieuNhapDTO s: res){
                Vector row=new Vector();
                row.add(s.getPhieunhap());
                row.add(s.getSach());
                row.add(s.getSoluong());
                row.add(s.getDongia());
                row.add(s.getThanhtien());

                resOfSearch.addRow(row);
            }
            tbChitiet.setModel(resOfSearch);
        }
    }
    private boolean validateBtThem(){
        switch(position){
            case "phieunhap":
                String MaPN, NCC,MaNV,NPN, TongTien;
                MaPN=tfMaPN.getText();
                NCC=tfMaNCC.getText();
                MaNV=tfMaNhanVien.getText();
                NPN=tfNN.getText();
                if(MaPN.equals("") || MaNV.equals("") || NCC.equals("") || NPN.equals("")){
                    JOptionPane.showMessageDialog(null, "Vui lòng nhập đủ thông tin", "Chú ý!", JOptionPane.INFORMATION_MESSAGE);
                    return false;
                }
                for(PhieuNhapHangDTO phieunhap: phieunhapbus.getList()){
                    if(MaPN.equals(phieunhap.getMaPNH())){
                        JOptionPane.showMessageDialog(null, "Mã phiếu nhạp đã tồn tại", "Chú ý!", JOptionPane.INFORMATION_MESSAGE);
                        return false;
                    }
                }
                break;
            case "chitiet":
                String MaPhieuNhap, MaSach,SL,DonGia,ThanhTien;
                MaPhieuNhap=tfMaPNChiTiet.getText();
                MaSach=tfMS.getText();
                SL=tfSoLuong.getText();
                DonGia=tfDG.getText();
                if(MaPhieuNhap.equals("") || MaSach.equals("") || SL.equals("") || DonGia.equals("")){
                    JOptionPane.showMessageDialog(null, "Vui lòng nhập đủ thông tin", "Chú ý!", JOptionPane.INFORMATION_MESSAGE);
                    return false;
                }
                break;
            
        }
        return true;
    }
     public static  void setMaSach(String MaSach){
                tfMS.setText(MaSach);
    }
      public static  void setMaNV(String MaNV){
                tfMaNhanVien.setText(MaNV);
    }
      public static  void setMaNCC(String MaNV){
                tfMaNCC.setText(MaNV);
    }
      
    public static void setDonGia(int dongia){
        tfDG.setText(String.valueOf(dongia));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhieuNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhieuNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhieuNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhieuNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                QuanLyPhieuNhap QLPN = new QuanLyPhieuNhap();
                try {
                    QLPN.ListPN();
                    QLPN.ListChiTiet();
                } catch (Exception ex) {
                    Logger.getLogger(QuanLySach.class.getName()).log(Level.SEVERE, null, ex);
                }
                QLPN.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAll;
    private javax.swing.JButton btDong;
    private javax.swing.JButton btHuy;
    private javax.swing.JButton btMaNCC;
    private javax.swing.JButton btMaNhanVien;
    private javax.swing.JButton btMaSach;
    private javax.swing.JButton btSua;
    private javax.swing.JButton btSua1;
    private javax.swing.JButton btTaoMoi;
    private javax.swing.JButton btTaoMoi1;
    private javax.swing.JButton btTatCa;
    private javax.swing.JButton btThem;
    private javax.swing.JButton btThem1;
    private javax.swing.JButton btTim;
    private javax.swing.JButton btTimCt;
    private javax.swing.JButton btXacNhan;
    private javax.swing.JButton btXoa;
    private javax.swing.JButton btXoa1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbChitiet;
    private javax.swing.JTable tbPN;
    private static javax.swing.JTextField tfDG;
    private static javax.swing.JTextField tfMS;
    private static javax.swing.JTextField tfMaNCC;
    private static javax.swing.JTextField tfMaNhanVien;
    private javax.swing.JTextField tfMaPN;
    private static javax.swing.JTextField tfMaPNChiTiet;
    private javax.swing.JTextField tfNN;
    private javax.swing.JTextField tfSoLuong;
    private static javax.swing.JTextField tfThanhTien;
    private javax.swing.JTextField tfTongTien;
    // End of variables declaration//GEN-END:variables
class RoundedPanel extends JPanel
    {
        private Color backgroundColor;
        private int cornerRadius = 15;
        public RoundedPanel(LayoutManager layout, int radius) {
            super(layout);
            cornerRadius = radius;
        }
        public RoundedPanel(LayoutManager layout, int radius, Color bgColor) {
            super(layout);
            cornerRadius = radius;
            backgroundColor = bgColor;
        }
        public RoundedPanel(int radius) {
            super();
            cornerRadius = radius;
            
        }
        public RoundedPanel(int radius, Color bgColor) {
            super();
            cornerRadius = radius;
            backgroundColor = bgColor;
        }
        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            Dimension arcs = new Dimension(cornerRadius, cornerRadius);
            int width = getWidth();
            int height = getHeight();
            Graphics2D graphics = (Graphics2D) g;
            graphics.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            //Draws the rounded panel with borders.
            if (backgroundColor != null) {
                graphics.setColor(backgroundColor);
            } else {
                graphics.setColor(getBackground());
            }
            graphics.fillRoundRect(0, 0, width-1, height-1, arcs.width, arcs.height); //paint background
            graphics.setColor(getForeground());
//            graphics.drawRoundRect(0, 0, width-1, height-1, arcs.width, arcs.height); //paint border
//             
        }
    }
}
